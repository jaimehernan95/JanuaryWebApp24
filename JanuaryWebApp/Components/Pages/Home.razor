@page "/"

@inject IJSRuntime JSRuntime

<PageTitle>Home</PageTitle>

<h1>Hello, @UserName!</h1>

<p>
    Welcome to your new app. We're excited to have you on board!
</p>

<div class="container mt-4">
    <!-- Profile picture -->
    <div class="row mb-4">
        <div class="col-lg-6 offset-lg-3">
            @if (IsUserLoggedIn)
            {
                <p>
                    Great to see you again, @UserName. You're now logged in!
                </p>

                <div>
                    @if (!string.IsNullOrEmpty(UserProfilePictureUrl))
                    {
                        <img src="@UserProfilePictureUrl" alt="Profile Picture" style="max-width: 100%; border-radius: 15%;" />
                    }
                    else
                    {
                        <p>No profile picture uploaded. <a href="/profile">Upload a picture</a></p>
                    }
                </div>
            }
            else
            {
                <p>
                    If you don't have an account, <a href="/register">register here</a>.
                </p>
            }
        </div>
    </div>

    <div class="row justify-content-center">
        <div class="col-lg-8">
            <!-- Plan columns for larger screens -->
            <div class="row d-none d-lg-flex">
                <div class="col-lg-3">
                    <div class="plan-column">
                        <h4>Plan 1 (Cheap)</h4>
                        <ul class="plan-details">
                            <li>Accommodation for 2</li>
                            <li>Access to common facilities</li>
                            <li>Free Wi-Fi</li>
                        </ul>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="plan-column">
                        <h4>Plan 2</h4>
                        <ul class="plan-details">
                            <li>Accommodation for 4</li>
                            <li>Private balcony</li>
                            <li>Swimming pool access</li>
                        </ul>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="plan-column">
                        <h4>Plan 3</h4>
                        <ul class="plan-details">
                            <li>Accommodation for 6</li>
                            <li>Beachfront view</li>
                            <li>Complimentary breakfast</li>
                        </ul>
                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="plan-column">
                        <h4>Plan 4 (Premium)</h4>
                        <ul class="plan-details">
                            <li>Accommodation for 8</li>
                            <li>Private villa</li>
                            <li>24/7 butler service</li>
                        </ul>
                    </div>
                </div>
            </div>

            <!-- Plan column for smaller screens with navigation buttons -->
            <div class="row d-lg-none">
                <div class="col-12 text-center">
                    <div class="plan-column" id="mobile-column">
                        <!-- Initially, only the first column is displayed -->
                        <h4>Plan 1 (Cheap)</h4>
                        <ul class="plan-details">
                            <li>Accommodation for 2</li>
                            <li>Access to common facilities</li>
                            <li>Free Wi-Fi</li>
                        </ul>
                    </div>
                </div>
                <div class="btn-container text-center">
                    <button class="manual-prev btn btn-primary" onclick="goToPreviousColumn()">Previous</button>
                    <button class="manual-next btn btn-primary" onclick="goToNextColumn()">Next</button>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    // Replace this with the logic to check if the user is logged in
    bool IsUserLoggedIn => true;

    // Replace this with the logic to get the username of the logged-in user
    string UserName => "John Doe";

    // Replace this with the logic to get the profile picture URL of the logged-in user
    string UserProfilePictureUrl => IsUserLoggedIn ? "/Content/Images/cate.jpg" : "/default-profile-picture.jpg";
}

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Call the JavaScript function to initialize navigation
            await JSRuntime.InvokeVoidAsync("initNavigation");
        }
    }
}

<script>
    let currentColumnIndex = 0;
    const columns = [
        `<div class="plan-column">
            <h2>Plan 1 (Cheap)</h2>
            <ul class="plan-details">
                <li>Accommodation for 2</li>
                <li>Access to common facilities</li>
                <li>Free Wi-Fi</li>
            </ul>
        </div>`,
        `<div class="plan-column">
            <h2>Plan 2</h2>
            <ul class="plan-details">
                <li>Accommodation for 4</li>
                <li>Private balcony</li>
                <li>Swimming pool access</li>
            </ul>
        </div>`,
        `<div class="plan-column">
            <h2>Plan 3</h2>
            <ul class="plan-details">
                <li>Accommodation for 6</li>
                <li>Beachfront view</li>
                <li>Complimentary breakfast</li>
            </ul>
        </div>`,
        `<div class="plan-column">
            <h2>Plan 4 (Premium)</h2>
            <ul class="plan-details">
                <li>Accommodation for 8</li>
                <li>Private villa</li>
                <li>24/7 butler service</li>
            </ul>
        </div>`
    ];

    function showCurrentColumn() {
        const mobileColumn = document.getElementById('mobile-column');
        mobileColumn.innerHTML = columns[currentColumnIndex];
    }

    function goToPreviousColumn() {
        currentColumnIndex = Math.max(currentColumnIndex - 1, 0);
        showCurrentColumn();
    }

    function goToNextColumn() {
        currentColumnIndex = Math.min(currentColumnIndex + 1, columns.length - 1);
        showCurrentColumn();
    }

    window.initNavigation = () => {
        showCurrentColumn();
    };
</script>

<style>
    /* Custom CSS for the plan columns */
    .plan-column {
        border: 1px solid #ddd;
        padding: 20px;
        margin-bottom: 20px;
        border-radius: 5px;
    }

    .plan-details {
        list-style-type: none;
        padding: 0;
    }

        .plan-details li {
            margin-bottom: 10px;
        }

    /* Custom CSS for navigation buttons */
    .btn-container {
        margin-top: 20px;
    }

    .manual-prev,
    .manual-next {
        margin-right: 10px;
        padding
    }
</style>